/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package entity;

import java.io.Serializable;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;

/**
 *
 * @author JoseVillagra
 */
@Entity
@Table(name = "tipo_requerimiento")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "TipoRequerimiento.findAll", query = "SELECT t FROM TipoRequerimiento t"),
    @NamedQuery(name = "TipoRequerimiento.findByNumeroTipoRequerimiento", query = "SELECT t FROM TipoRequerimiento t WHERE t.numeroTipoRequerimiento = :numeroTipoRequerimiento"),
    @NamedQuery(name = "TipoRequerimiento.findByCodigoTipoRequerimiento", query = "SELECT t FROM TipoRequerimiento t WHERE t.codigoTipoRequerimiento = :codigoTipoRequerimiento")})
public class TipoRequerimiento implements Serializable {
    private static final long serialVersionUID = 1L;
    @Id
    @Basic(optional = false)
    @NotNull
    @Column(name = "numero_tipo_requerimiento")
    private Integer numeroTipoRequerimiento;
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 30)
    @Column(name = "codigo_tipo_requerimiento")
    private String codigoTipoRequerimiento;

    public TipoRequerimiento() {
    }

    public TipoRequerimiento(Integer numeroTipoRequerimiento) {
        this.numeroTipoRequerimiento = numeroTipoRequerimiento;
    }

    public TipoRequerimiento(Integer numeroTipoRequerimiento, String codigoTipoRequerimiento) {
        this.numeroTipoRequerimiento = numeroTipoRequerimiento;
        this.codigoTipoRequerimiento = codigoTipoRequerimiento;
    }

    public Integer getNumeroTipoRequerimiento() {
        return numeroTipoRequerimiento;
    }

    public void setNumeroTipoRequerimiento(Integer numeroTipoRequerimiento) {
        this.numeroTipoRequerimiento = numeroTipoRequerimiento;
    }

    public String getCodigoTipoRequerimiento() {
        return codigoTipoRequerimiento;
    }

    public void setCodigoTipoRequerimiento(String codigoTipoRequerimiento) {
        this.codigoTipoRequerimiento = codigoTipoRequerimiento;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (numeroTipoRequerimiento != null ? numeroTipoRequerimiento.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof TipoRequerimiento)) {
            return false;
        }
        TipoRequerimiento other = (TipoRequerimiento) object;
        if ((this.numeroTipoRequerimiento == null && other.numeroTipoRequerimiento != null) || (this.numeroTipoRequerimiento != null && !this.numeroTipoRequerimiento.equals(other.numeroTipoRequerimiento))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "entity.TipoRequerimiento[ numeroTipoRequerimiento=" + numeroTipoRequerimiento + " ]";
    }
    
}
